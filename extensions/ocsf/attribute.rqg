PREFIX ocsf: <https://schema.ocsf.io/1.1.0-dev/ontology/>
PREFIX d3f: <http://d3fend.mitre.org/ontologies/d3fend.owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX jsonschema: <https://www.w3.org/2019/wot/json-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>

GENERATE <https://schema.ocsf.io/1.1.0-dev/attribute> ( ?source, ?attributeIRI, ?attributeKey ) {
  ?attributeIRI a rdf:Property ;
    rdfs:label ?caption ;
    dcterms:description ?description ;
    ocsf:enum ?enum ;
    ocsf:sibling ?sibling ;
    rdfs:range ?typeIRI ;
    ocsf:is_array ?is_array .
}

ITERATOR iter:JSONPath(?source, "$", "$.caption", "$.description", "$.enum", "$.sibling", "$.type", "$.is_array") AS ?attribute ?caption ?description ?enum ?sibling ?type ?is_array 

WHERE {
  # BIND ( IRI("https://schema.ocsf.io/1.1.0-dev/ontology/" + ?type) AS ?typeIRI )
  ?typeIRI a owl:Class .
  ?typeIRI ocsf:name ?type .
}
