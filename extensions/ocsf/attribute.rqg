PREFIX ocsf: <https://schema.ocsf.io/1.1.0-dev/ontology/>
PREFIX d3f: <http://d3fend.mitre.org/ontologies/d3fend.owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX jsonschema: <https://www.w3.org/2019/wot/json-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>

# rdfs:seeAlso <https://schema.ocsf.io/1.1.0-dev/dictionary>

# {
#     "$id": "https://schema.ocsf.io/attribute.schema.json",
#     "$schema": "https://json-schema.org/draft/2020-12/schema",
#     "title": "Attribute",
#     "type": "object",
#     "properties": {
#         "@deprecated": {
#             "$ref": "deprecated.schema.json"
#         },
#         "caption": {
#             "type": "string",
#             "description": "A short, more specific identifier for this attribute."
#         },
#         "description": {
#             "type": "string",
#             "description": "The description of the attribute."
#         },
#         "enum": {
#             "type": "object",
#             "description": "An enumeration of options for this attribute.",
#             "additionalProperties": {
#                 "type": "object",
#                 "required": [
#                     "caption"
#                 ],
#                 "properties": {
#                     "caption": {
#                         "type": "string",
#                         "description": "The caption of this enum value."
#                     },
#                     "description": {
#                         "type": "string",
#                         "description": "The description of this enum value."
#                     },
#                     "additionalProperties": false
#                 }
#             }
#         },
#         "group": {
#             "type": "string",
#             "description": "The group that the attribute is a part of.",
#             "enum": ["context", "classification", "occurrence", "primary"]
#         },
#         "requirement": {
#             "type": "string",
#             "description": "The requirement placed on the attribute for inclusion in the schema.",
#             "enum": ["optional", "recommended", "required"]
#         },
#         "sibling": {
#             "type": "string",
#             "description": "Sibling attributes are string attributes paired with a source enum id attribute. If the source attribute maps to a defined enumeration value, the sibling attribute should be populated with the label of the enum. In the case that the source attribute is `Other`, the sibling attribute is populated with a custom label."
#         }
#     }
# }

GENERATE <https://schema.ocsf.io/1.1.0-dev/attribute> ( ?source, ?attributeIRI, ?attributeKey ) {
  ?attributeIRI a rdf:Property ;
    rdfs:label ?caption ;
    dcterms:description ?description ;
    ocsf:enum ?enum ;
    ocsf:sibling ?sibling ;
    rdfs:range ?typeIRI ;
    ocsf:is_array ?is_array .
}

ITERATOR iter:JSONPath(?source, "$", "$.caption", "$.description", "$.enum", "$.sibling", "$.type", "$.is_array") AS ?attribute ?caption ?description ?enum ?sibling ?type ?is_array 

WHERE {
  # BIND ( IRI("https://schema.ocsf.io/1.1.0-dev/ontology/" + ?type) AS ?typeIRI )
  ?typeIRI a owl:Class .
  ?typeIRI ocsf:name ?type .
}

ORDER BY DESC(?caption)
